name: continuous-integration

on:
  push:
    branches:
      - master
      - deploy

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Restore node_modules from cache
        uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: node_modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install node dependencies
        run: yarn install --frozen-lockfile

      - name: Quality control - type check/lint/unit test
        run: |
          yarn start tc
          yarn start lint
          # yarn start cra.t.t

      - name: Build apps
        run: |
          yarn start cra.b
          # build backend
          yarn start be.b

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: Docker build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: samba6/kanmii:imm-cy-be
          target: prod
          file: Dockerfile.be

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to backend server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.LINODE_AT_SSH_HOST }}
          username: ${{ secrets.LINODE_AT_USER }}
          key: ${{ secrets.LINODE_SSH_PRIVATE_KEY }}
          port: ${{ secrets.LINODE_AT_SSH_PORT }}
          script_stop: true
          script: |
            rm -rf ${{ secrets.PROJECT_PATH }} && \
              mkdir -p ${{ secrets.PROJECT_PATH }} && \
              echo ${{ secrets.LINODE_AT_PASS }} | \
                sudo -S chmod 666 /var/run/docker.sock && \
              cd ${{ secrets.PROJECT_PATH }} && \
              docker pull samba6/kanmii:imm-cy-be && \
              docker rm -f imm-cy-be 2>/dev/null && \
              docker run \
                -d \
                --name imm-cy-be \
                --env PORT=${{ secrets.PORT }} \
                --env DATA_FILE=${{ secrets.DATA_FILE }} \
                -p 80:${{ secrets.PORT }} \
                -p 443:${{ secrets.PORT }} \
                samba6/kanmii:imm-cy-be

      - name: Deploy to netlify
        run: yarn start cra.n.p
